openapi: 3.0.4

info:
  title: Online Learning API
  contact: {}
  version: '1.0'
servers:
  - url: http://localhost:5000/api/v1
    variables: {}
paths:
  /auth/login:
    post:
      tags:
        - Auth
      summary: login
      operationId: login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/loginrequest'
                - example:
                    email: goodyc474@gmail.com
                    password: pleasant475
            example:
              email: goodyc474@gmail.com
              password: pleasant475
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/register:
    post:
      tags:
        - Auth
      summary: register
      operationId: register
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/registerrequest'
                - example:
                    name: example
                    email: example@gmail.com
                    password: password
            example:
              name: example
              email: example@gmail.com
              password: password
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registerrequest'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /jobs:
    post:
      tags:
        - jobs
      summary: Create job
      operationId: Createjob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreatejobRequest'
                - example:
                    company: Access bank
                    position: 'backend dev '
            example:
              company: Access bank
              position: 'backend dev '
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - jobs
      summary: Get All Jobs
      operationId: GetAllJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/66f8423a76590da44b94227934:
    get:
      tags:
        - jobs
      summary: Get Single Job
      operationId: GetSingleJob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - jobs
      summary: Delete job
      operationId: Deletejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - jobs
      summary: Update job
      operationId: Updatejob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatejobRequest'
                - example:
                    company: Zenith bank
                    position: 'backend dev '
            example:
              company: Zenith bank
              position: 'backend dev '
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
components:
  schemas:
    loginrequest:
      title: loginrequest
      required:
        - email
        - password

      type: object
      properties:
        email:
          type: string
        password:
          type: string

      example:
        email: example@gmail.com
        password: password
    registerrequest:
      title: registerrequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: mygoodness
        email: goodyc474@gmail.com
        password: pleasant475
    CreatejobRequest:
      title: CreatejobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Access bank
        position: 'backend dev '
    UpdatejobRequest:
      title: UpdatejobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Zenith bank
        position: 'backend dev '
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Misc
    description: ''
  - name: Auth
    description: ''
  - name: jobs
    description: ''
