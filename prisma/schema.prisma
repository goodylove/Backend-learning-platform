// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  student
  instructor
  admin
}


model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  role     Role   @default(student) 
  verified  Boolean  @default(false)
  courses Course[]
  enrollments Enrollment[]
  resetPasswordToken String? 
  verificationToken String?   
  createdAt DateTime @default(now())
}

model Course {
  id          String   @id @default(uuid())
  title       String
  description String?
  instructor  User     @relation(fields: [instructorId], references: [id])
  instructorId String
  enrollments Enrollment[]
  lessons Lesson[]

  createdAt   DateTime @default(now())
}

model Enrollment {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  String
  enrolledAt DateTime @default(now())

  @@unique([userId, courseId])
}

model Lesson {
  id        String   @id @default(uuid())
  title     String
  content   String?
  videoUrl  String?
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  String
  createdAt DateTime @default(now())
}

